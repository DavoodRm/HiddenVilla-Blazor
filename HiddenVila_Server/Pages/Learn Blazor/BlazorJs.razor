@page "/blazorJs"

@inject IJSRuntime JSRuntime

<h3>BlazorJs</h3>
<div class="row">
    <div class="col-2">
        <button class="btn btn-secondary" @onclick="(async ()=>  await TestConfirmBox(ConfirmMessage))">Confirm Button</button>
    </div>
    <div class="col-2">
        @if (confirmResult)
        {
            <p>Confirm Result is True</p>
        }
        else
        {
            <p>Confirm Result is False</p>

        }
    </div>
</div>
<br/>
<div class="row">
    <div class="col-4">
        <button class="btn btn-success" @onclick="TestSuccess">Success JS</button>
        <button class="btn btn-danger" @onclick="TestFail">Fail JS</button>
    </div>
</div>
<br/>
<div class="row">
    <div class="col-4">
        <button class="btn btn-success" @onclick="TestSuccessswl">Success SWL</button>
        <button class="btn btn-danger" @onclick="TestFailswl">Fail SWL</button>
    </div>
   
</div>

@code {

    private string ConfirmMessage = "Are you sure you want to click?";
    private bool confirmResult { get; set; }
    private async Task TestConfirmBox(string message)
    {
        confirmResult= await JSRuntime.InvokeAsync<bool>("confirm", message);
    }

    private async Task TestSuccess()
    {
       //  await JSRuntime.InvokeVoidAsync("ShowToastr", "success","Success msg");
      await JSRuntime.ToastrSuccess( "Success msg");

    }
    private async Task TestFail()
    {
        await JSRuntime.ToastrError("Error Msg");
    }

    private async Task TestSuccessswl()
    {
    //  await JSRuntime.InvokeVoidAsync("ShowToastr", "success","Success msg");
        await JSRuntime.SweetAlertSuccess( "Success msg");

    }
    private async Task TestFailswl()
    {
        await JSRuntime.SweetAlertError("Error Msg");
    }
}

 